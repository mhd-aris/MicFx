@model DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<!-- Welcome Section -->
<div class="mb-8">
    <div
        class="bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl shadow-lg p-8 text-white relative overflow-hidden">
        <!-- Background Pattern -->
        <div class="absolute inset-0 opacity-10">
            <div class="absolute -top-4 -right-4 w-24 h-24 bg-white rounded-full"></div>
            <div class="absolute top-1/2 -left-8 w-16 h-16 bg-white rounded-full"></div>
        </div>

        <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between relative z-10">
            <div class="mb-6 lg:mb-0">
                <h2 class="text-2xl md:text-3xl font-bold mb-2 leading-tight">
                    Selamat Datang di Admin Panel
                </h2>
                <p class="text-blue-100 text-base md:text-lg leading-relaxed">
                    Kelola framework MicFx dengan mudah melalui admin panel yang modern ini
                </p>

                <!-- Status Indicators -->
                <div class="mt-6 flex flex-wrap items-center gap-4">
                    <div class="flex items-center text-sm text-blue-100">
                        <div class="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></div>
                        <span>System Online</span>
                    </div>
                    <div class="flex items-center text-sm text-blue-100">
                        <div class="w-2 h-2 bg-blue-400 rounded-full mr-2 animate-pulse"></div>
                        <span>All Modules Active</span>
                    </div>
                </div>
            </div>

            <!-- Date and Time Section -->
            <div class="text-left lg:text-right">
                <div class="flex items-center text-sm text-blue-100 mb-2 lg:justify-end">
                    <svg class="w-4 h-4 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <span id="currentDate">@DateTime.Now.ToString("dddd, dd MMMM yyyy")</span>
                </div>
                <div class="text-xl md:text-2xl font-bold text-white" id="currentTime">
                    @DateTime.Now.ToString("HH:mm:ss")
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Stats Cards -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <!-- System Status -->
    <div
        class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-lg transition-shadow duration-200 cursor-pointer">
        <div class="flex items-center justify-between mb-4">
            <div class="p-3 bg-green-100 rounded-lg">
                <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
            </div>
            <div class="w-3 h-3 bg-green-500 rounded-full animate-pulse"></div>
        </div>
        <div>
            <p class="text-sm font-medium text-gray-600 mb-1">System Status</p>
            <p class="text-2xl font-bold text-gray-900 mb-2">Online</p>
            <div class="w-full bg-green-100 rounded-full h-2">
                <div class="bg-green-500 h-2 rounded-full" style="width: 100%"></div>
            </div>
        </div>
    </div>

    <!-- Active Modules -->
    <div
        class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-lg transition-shadow duration-200 cursor-pointer">
        <div class="flex items-center justify-between mb-4">
            <div class="p-3 bg-blue-100 rounded-lg">
                <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10">
                    </path>
                </svg>
            </div>
            <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs font-semibold rounded-full">@Model.ModuleInfo.TotalModules Active</span>
        </div>
        <div>
            <p class="text-sm font-medium text-gray-600 mb-1">Active Modules</p>
            <p class="text-2xl font-bold text-gray-900 mb-2">@Model.ModuleInfo.TotalModules</p>
            <div class="w-full bg-blue-100 rounded-full h-2">
                <div class="bg-blue-500 h-2 rounded-full" style="width: 100%"></div>
            </div>
        </div>
    </div>

    <!-- Memory Usage -->
    <div
        class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-lg transition-shadow duration-200 cursor-pointer">
        <div class="flex items-center justify-between mb-4">
            <div class="p-3 bg-amber-100 rounded-lg">
                <svg class="w-6 h-6 text-amber-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                </svg>
            </div>
            <span class="px-2 py-1 bg-amber-100 text-amber-800 text-xs font-semibold rounded-full">Normal</span>
        </div>
        <div>
            <p class="text-sm font-medium text-gray-600 mb-1">Memory Usage</p>
            <p class="text-2xl font-bold text-gray-900 mb-2">245 MB</p>
            <div class="w-full bg-amber-100 rounded-full h-2">
                <div class="bg-amber-500 h-2 rounded-full" style="width: 60%"></div>
            </div>
        </div>
    </div>

    <!-- Uptime -->
    <div
        class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-lg transition-shadow duration-200 cursor-pointer">
        <div class="flex items-center justify-between mb-4">
            <div class="p-3 bg-purple-100 rounded-lg">
                <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
            </div>
            <div class="w-3 h-3 bg-purple-500 rounded-full animate-pulse"></div>
        </div>
        <div>
            <p class="text-sm font-medium text-gray-600 mb-1">Uptime</p>
            <p class="text-2xl font-bold text-gray-900 mb-2">2h 15m</p>
            <div class="w-full bg-purple-100 rounded-full h-2">
                <div class="bg-purple-500 h-2 rounded-full" style="width: 88%"></div>
            </div>
        </div>
    </div>
</div>

<!-- System Information -->
<div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
    <!-- System Info -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center mb-6">
            <div class="p-3 bg-blue-100 rounded-lg mr-3">
                <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M9 12l6 6 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
            </div>
            <h3 class="text-lg font-bold text-gray-900">System Information</h3>
        </div>
        <div class="space-y-3">
            <div class="flex justify-between items-center py-2 border-b border-gray-100">
                <span class="text-gray-600 font-medium">Application:</span>
                <span class="font-semibold text-gray-900">@Model.SystemInfo.ApplicationName</span>
            </div>
            <div class="flex justify-between items-center py-2 border-b border-gray-100">
                <span class="text-gray-600 font-medium">Version:</span>
                <span
                    class="px-2 py-1 bg-blue-100 text-blue-800 text-sm font-semibold rounded">@Model.SystemInfo.Version</span>
            </div>
            <div class="flex justify-between items-center py-2 border-b border-gray-100">
                <span class="text-gray-600 font-medium">Environment:</span>
                <span
                    class="inline-flex items-center px-2 py-1 rounded text-sm font-semibold @(Model.SystemInfo.Environment == "Development" ? "bg-yellow-100 text-yellow-800" : "bg-green-100 text-green-800")">
                    @Model.SystemInfo.Environment
                </span>
            </div>
            <div class="flex justify-between items-center py-2">
                <span class="text-gray-600 font-medium">Platform:</span>
                <span class="px-2 py-1 bg-gray-100 text-gray-800 text-sm font-semibold rounded">.NET 8.0</span>
            </div>
        </div>
    </div>

    <!-- Loaded Modules -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center mb-6">
            <div class="p-3 bg-purple-100 rounded-lg mr-3">
                <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10">
                    </path>
                </svg>
            </div>
            <h3 class="text-lg font-bold text-gray-900">Loaded Modules</h3>
        </div>
        <div class="space-y-3">
            @foreach (var module in Model.ModuleInfo.LoadedModules)
            {
                <div class="flex justify-between items-center py-2 border-b border-gray-100">
                    <span class="text-gray-600 font-medium">@module:</span>
                    <span class="inline-flex items-center px-2 py-1 rounded text-sm font-semibold bg-green-100 text-green-800">
                        <div class="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
                        Active
                    </span>
                </div>
            }
            <div class="pt-3 mt-3 border-t border-gray-200">
                <div class="flex justify-between items-center">
                    <span class="text-gray-600 font-medium">Navigation Contributors:</span>
                    <span class="px-2 py-1 bg-blue-100 text-blue-800 text-sm font-semibold rounded">@Model.ModuleInfo.NavigationContributors</span>
                </div>
            </div>
            <div class="flex justify-between items-center">
                <span class="text-gray-600 font-medium">Total Navigation Items:</span>
                <span class="px-2 py-1 bg-purple-100 text-purple-800 text-sm font-semibold rounded">@Model.ModuleInfo.TotalNavigationItems</span>
            </div>
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center mb-6">
            <div class="p-3 bg-green-100 rounded-lg mr-3">
                <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                </svg>
            </div>
            <h3 class="text-lg font-bold text-gray-900">Recent Activity</h3>
        </div>
        <div class="space-y-3">
            <div class="flex items-center p-3 bg-green-50 rounded-lg border border-green-100">
                <div class="w-3 h-3 bg-green-500 rounded-full mr-3 animate-pulse"></div>
                <div class="flex-1">
                    <p class="text-sm font-medium text-gray-900">Admin panel accessed</p>
                    <p class="text-xs text-green-600">Just now</p>
                </div>
            </div>
            <div class="flex items-center p-3 bg-blue-50 rounded-lg border border-blue-100">
                <div class="w-3 h-3 bg-blue-500 rounded-full mr-3"></div>
                <div class="flex-1">
                    <p class="text-sm font-medium text-gray-900">Module HelloWorld loaded</p>
                    <p class="text-xs text-blue-600">2 minutes ago</p>
                </div>
            </div>
            <div class="flex items-center p-3 bg-purple-50 rounded-lg border border-purple-100">
                <div class="w-3 h-3 bg-purple-500 rounded-full mr-3"></div>
                <div class="flex-1">
                    <p class="text-sm font-medium text-gray-900">System started</p>
                    <p class="text-xs text-purple-600">2 hours ago</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Performance Chart -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center mb-6">
            <div class="p-3 bg-gray-100 rounded-lg mr-3">
                <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z">
                    </path>
                </svg>
            </div>
            <h3 class="text-lg font-bold text-gray-900">Performance</h3>
        </div>
        <div class="space-y-4">
            <div>
                <div class="flex justify-between items-center mb-2">
                    <span class="text-sm font-medium text-gray-600">CPU Usage</span>
                    <span class="text-sm font-semibold text-gray-900">32%</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-2">
                    <div class="bg-blue-500 h-2 rounded-full" style="width: 32%"></div>
                </div>
            </div>
            <div>
                <div class="flex justify-between items-center mb-2">
                    <span class="text-sm font-medium text-gray-600">Memory</span>
                    <span class="text-sm font-semibold text-gray-900">60%</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-2">
                    <div class="bg-green-500 h-2 rounded-full" style="width: 60%"></div>
                </div>
            </div>
            <div>
                <div class="flex justify-between items-center mb-2">
                    <span class="text-sm font-medium text-gray-600">Disk I/O</span>
                    <span class="text-sm font-semibold text-gray-900">18%</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-2">
                    <div class="bg-purple-500 h-2 rounded-full" style="width: 18%"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Quick Actions -->
<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
    <div class="flex items-center mb-6">
        <div class="p-3 bg-blue-100 rounded-lg mr-3">
            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z">
                </path>
            </svg>
        </div>
        <div>
            <h3 class="text-lg font-bold text-gray-900">Quick Actions</h3>
            <p class="text-gray-600 text-sm">Akses cepat ke fitur utama MicFx</p>
        </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
        <button class="bg-blue-50 border border-blue-100 rounded-lg p-4 hover:shadow-md transition-shadow duration-200">
            <div class="text-center">
                <div class="mx-auto w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-3">
                    <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10">
                        </path>
                    </svg>
                </div>
                <h4 class="font-semibold text-gray-900 mb-1">Manage Modules</h4>
                <p class="text-sm text-gray-600">Kelola dan monitor status semua module</p>
            </div>
        </button>

        <button
            class="bg-green-50 border border-green-100 rounded-lg p-4 hover:shadow-md transition-shadow duration-200">
            <div class="text-center">
                <div class="mx-auto w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-3">
                    <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z">
                        </path>
                    </svg>
                </div>
                <h4 class="font-semibold text-gray-900 mb-1">View Logs</h4>
                <p class="text-sm text-gray-600">Monitor dan analisis system logs</p>
            </div>
        </button>

        <button
            class="bg-purple-50 border border-purple-100 rounded-lg p-4 hover:shadow-md transition-shadow duration-200">
            <div class="text-center">
                <div class="mx-auto w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-3">
                    <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4">
                        </path>
                    </svg>
                </div>
                <h4 class="font-semibold text-gray-900 mb-1">Configuration</h4>
                <p class="text-sm text-gray-600">Konfigurasi sistem dan module settings</p>
            </div>
        </button>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <button
            class="bg-orange-50 border border-orange-100 rounded-lg p-3 hover:shadow-md transition-shadow duration-200">
            <div class="flex items-center">
                <div class="w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center mr-3">
                    <svg class="w-5 h-5 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                </div>
                <div class="text-left">
                    <h4 class="font-semibold text-gray-900">User Management</h4>
                    <p class="text-sm text-gray-600">Kelola users dan permissions</p>
                </div>
            </div>
        </button>

        <button class="bg-teal-50 border border-teal-100 rounded-lg p-3 hover:shadow-md transition-shadow duration-200">
            <div class="flex items-center">
                <div class="w-10 h-10 bg-teal-100 rounded-lg flex items-center justify-center mr-3">
                    <svg class="w-5 h-5 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z">
                        </path>
                    </svg>
                </div>
                <div class="text-left">
                    <h4 class="font-semibold text-gray-900">System Analytics</h4>
                    <p class="text-sm text-gray-600">Performance metrics dan reports</p>
                </div>
            </div>
        </button>
    </div>
</div>

<!-- Module Navigation Items -->
@if (Model.ModuleInfo.NavigationByCategory.Any())
{
    <div class="mt-8 bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center mb-6">
            <div class="p-3 bg-indigo-100 rounded-lg mr-3">
                <svg class="w-6 h-6 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
                </svg>
            </div>
            <div>
                <h3 class="text-lg font-bold text-gray-900">Module Navigation</h3>
                <p class="text-gray-600 text-sm">Navigation items contributed by loaded modules</p>
            </div>
        </div>

        <div class="space-y-6">
            @foreach (var category in Model.ModuleInfo.NavigationByCategory.OrderBy(c => c.Key))
            {
                <div>
                    <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                        <span class="px-3 py-1 bg-gray-100 text-gray-800 text-sm rounded-full mr-3">@category.Key</span>
                        <span class="text-sm text-gray-500">(@category.Value.Count items)</span>
                    </h4>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        @foreach (var item in category.Value.OrderBy(i => i.Order))
                        {
                            <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow duration-200 hover:border-blue-300">
                                <div class="flex items-center justify-between mb-3">
                                    <h5 class="font-semibold text-gray-900">@item.Title</h5>
                                    <span class="inline-flex items-center px-2 py-1 rounded text-xs font-semibold @(item.IsActive ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                        @(item.IsActive ? "Active" : "Inactive")
                                    </span>
                                </div>
                                
                                <div class="space-y-2 text-sm">
                                    <div class="flex items-center text-gray-600">
                                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
                                        </svg>
                                        <a href="@item.Url" class="text-blue-600 hover:text-blue-800 font-mono text-xs">@item.Url</a>
                                    </div>
                                    
                                    @if (item.RequiredRoles?.Any() == true)
                                    {
                                        <div class="flex items-start">
                                            <svg class="w-4 h-4 mr-2 mt-0.5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                                            </svg>
                                            <div class="flex flex-wrap gap-1">
                                                @foreach (var role in item.RequiredRoles)
                                                {
                                                    <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded">@role</span>
                                                }
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="flex items-center text-gray-500">
                                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z"></path>
                                            </svg>
                                            <span class="text-xs italic">Public access</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
        
        <div class="mt-6 pt-6 border-t border-gray-200">
            <div class="flex items-center justify-between">
                <div class="text-sm text-gray-600">
                    <span class="font-medium">Total:</span> @Model.ModuleInfo.TotalNavigationItems navigation items from @Model.ModuleInfo.NavigationContributors contributors
                </div>
                <a href="/admin/diagnostics" class="inline-flex items-center px-3 py-2 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition-colors duration-200">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                    </svg>
                    View Diagnostics
                </a>
            </div>
        </div>
    </div>
}
else
{
    <div class="mt-8 bg-yellow-50 border border-yellow-200 rounded-lg p-6">
        <div class="flex items-center">
            <div class="p-2 bg-yellow-100 rounded-lg mr-3">
                <svg class="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                </svg>
            </div>
            <div>
                <h4 class="font-semibold text-yellow-800">No Navigation Items Available</h4>
                <p class="text-yellow-700 text-sm">No modules have contributed navigation items, or you may not have the required permissions to view them.</p>
            </div>
        </div>
    </div>
}

@section Scripts {
<script>
    // Real-time clock update
    function updateDateTime() {
        const now = new Date();
        
        // Update time
        const timeElement = document.getElementById('currentTime');
        if (timeElement) {
            timeElement.textContent = now.toLocaleTimeString('id-ID', {
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit'
            });
        }
        
        // Update date (only if needed)
        const dateElement = document.getElementById('currentDate');
        if (dateElement) {
            const dateString = now.toLocaleDateString('id-ID', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            dateElement.textContent = dateString;
        }
    }
    
    // Update immediately and then every second
    updateDateTime();
    setInterval(updateDateTime, 1000);
    
    // Make quick action buttons functional
    document.addEventListener('DOMContentLoaded', function() {
        // Add click handlers for quick action buttons
        const quickActionButtons = document.querySelectorAll('button[class*="bg-"][class*="border-"]');
        
        quickActionButtons.forEach(button => {
            button.addEventListener('click', function() {
                const buttonText = this.querySelector('h4')?.textContent;
                
                switch(buttonText) {
                    case 'Manage Modules':
                        window.location.href = '/admin/diagnostics';
                        break;
                    case 'View Logs':
                        window.open('/swagger', '_blank');
                        break;
                    case 'Configuration':
                        window.open('/health', '_blank');
                        break;
                    case 'User Management':
                        window.location.href = '/admin/diagnostics/test-roles';
                        break;
                    case 'System Analytics':
                        window.location.href = '/admin/diagnostics';
                        break;
                    default:
                        console.log('Quick action clicked:', buttonText);
                }
            });
        });
    });
</script>
}