@model MicFx.Modules.Auth.Domain.DTOs.EditUserViewModel

@{
    ViewData["Title"] = "Edit User";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="space-y-6">
    <!-- Header -->
    <div class="flex justify-between items-center">
        <div>
            <h2 class="text-2xl font-bold text-gray-900">Edit User</h2>
            <p class="text-gray-600 mt-1">Update user information and permissions</p>
        </div>
        <a href="/admin/auth/users" class="micfx-button-secondary">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            Back to Users
        </a>
    </div>

    <!-- Edit Form -->
    <div class="micfx-card">
        <form method="post" class="space-y-6">
            <input type="hidden" name="Id" value="@Model.Id" />
            
            <div class="grid md:grid-cols-2 gap-6">
                <!-- First Name -->
                <div>
                    <label for="FirstName" class="block text-sm font-medium text-gray-700 mb-2">
                        First Name
                    </label>
                    <input type="text" 
                           id="FirstName" 
                           name="FirstName" 
                           value="@Model.FirstName"
                           class="micfx-input w-full"
                           placeholder="Enter first name"
                           required>
                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["FirstName"]?.Errors.Any() == true)
                    {
                        <p class="mt-1 text-sm text-red-600">@ViewData.ModelState["FirstName"].Errors.First().ErrorMessage</p>
                    }
                </div>

                <!-- Last Name -->
                <div>
                    <label for="LastName" class="block text-sm font-medium text-gray-700 mb-2">
                        Last Name
                    </label>
                    <input type="text" 
                           id="LastName" 
                           name="LastName" 
                           value="@Model.LastName"
                           class="micfx-input w-full"
                           placeholder="Enter last name"
                           required>
                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["LastName"]?.Errors.Any() == true)
                    {
                        <p class="mt-1 text-sm text-red-600">@ViewData.ModelState["LastName"].Errors.First().ErrorMessage</p>
                    }
                </div>
            </div>

            <div class="grid md:grid-cols-2 gap-6">
                <!-- Email -->
                <div>
                    <label for="Email" class="block text-sm font-medium text-gray-700 mb-2">
                        Email Address
                    </label>
                    <input type="email" 
                           id="Email" 
                           name="Email" 
                           value="@Model.Email"
                           class="micfx-input w-full"
                           placeholder="user@example.com"
                           required>
                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Email"]?.Errors.Any() == true)
                    {
                        <p class="mt-1 text-sm text-red-600">@ViewData.ModelState["Email"].Errors.First().ErrorMessage</p>
                    }
                </div>

                <!-- Status -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        Status
                    </label>
                    <div class="flex items-center">
                        <input type="checkbox" 
                               id="IsActive" 
                               name="IsActive" 
                               value="true"
                               @(Model.IsActive ? "checked" : "")
                               class="h-4 w-4 text-micfx-600 focus:ring-micfx-500 border-gray-300 rounded">
                        <label for="IsActive" class="ml-3 text-sm text-gray-700">
                            Active user
                        </label>
                    </div>
                </div>
            </div>

            <!-- Roles -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-3">
                    Assign Roles
                </label>
                <div class="space-y-3">
                    @foreach (var role in Model.AvailableRoles)
                    {
                        <div class="flex items-center">
                            <input type="checkbox" 
                                   id="role_@role.Id" 
                                   name="SelectedRoles" 
                                   value="@role.Name"
                                   @(Model.SelectedRoles?.Contains(role.Name) == true ? "checked" : "")
                                   class="h-4 w-4 text-micfx-600 focus:ring-micfx-500 border-gray-300 rounded">
                            <label for="role_@role.Id" class="ml-3 text-sm text-gray-700">
                                @role.Name
                                @if (!string.IsNullOrEmpty(role.Description))
                                {
                                    <span class="text-gray-500"> - @role.Description</span>
                                }
                            </label>
                        </div>
                    }
                </div>
                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["SelectedRoles"]?.Errors.Any() == true)
                {
                    <p class="mt-1 text-sm text-red-600">@ViewData.ModelState["SelectedRoles"].Errors.First().ErrorMessage</p>
                }
            </div>

            <!-- Submit Buttons -->
            <div class="flex justify-end space-x-3 pt-6 border-t border-gray-200">
                <a href="/admin/auth/users" class="micfx-button-secondary">
                    Cancel
                </a>
                <button type="submit" class="micfx-button-primary">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    Update User
                </button>
            </div>
        </form>
    </div>
</div> 