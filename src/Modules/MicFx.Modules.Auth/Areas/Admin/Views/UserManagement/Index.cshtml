@model List<MicFx.Modules.Auth.Domain.DTOs.UserViewModel>

@{
    ViewData["Title"] = "User Management";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="space-y-6">
    <!-- Header -->
    <div class="flex justify-between items-center">
        <div>
            <h2 class="text-2xl font-bold text-gray-900">User Management</h2>
            <p class="text-gray-600 mt-1">Manage user accounts and permissions</p>
        </div>
        <a href="/admin/auth/users/create" class="micfx-button-primary">
            Add New User
        </a>
    </div>

    <!-- Search and Filters -->
    <div class="bg-white p-4 rounded shadow-sm">
        <form method="get" class="flex gap-4">
            <input type="text" name="search" value="@ViewBag.Search" placeholder="Search users..." class="micfx-input flex-1">
            <button type="submit" class="micfx-button-secondary">Search</button>
        </form>
    </div>

    <!-- Users Table -->
    <div class="bg-white rounded shadow-sm overflow-hidden">
        <table class="w-full">
            <thead class="bg-gray-50">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Name</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Email</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Roles</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Created</th>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">Actions</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-100">
                @foreach (var user in Model)
                {
                    <tr class="hover:bg-gray-50">
                        <td class="px-6 py-4">
                            <div class="font-medium text-gray-900">@user.FullName</div>
                        </td>
                        <td class="px-6 py-4 text-gray-900">@user.Email</td>
                        <td class="px-6 py-4">
                            @if (user.Roles.Any())
                            {
                                <div class="flex flex-wrap gap-1">
                                    @foreach (var role in user.Roles.Take(2))
                                    {
                                        <span class="inline-flex px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded">@role</span>
                                    }
                                    @if (user.Roles.Count > 2)
                                    {
                                        <span class="inline-flex px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded">+@(user.Roles.Count - 2)</span>
                                    }
                                </div>
                            }
                        </td>
                        <td class="px-6 py-4">
                            <span class="inline-flex px-2 py-1 text-xs rounded @(user.IsActive ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                @(user.IsActive ? "Active" : "Inactive")
                            </span>
                        </td>
                        <td class="px-6 py-4 text-sm text-gray-500">@user.CreatedAt.ToString("MMM dd, yyyy")</td>
                        <td class="px-6 py-4 text-right">
                            <a href="/admin/auth/users/edit/@user.Id" class="text-blue-600 hover:text-blue-900 mr-3">Edit</a>
                            <a href="/admin/auth/users/details/@user.Id" class="text-gray-600 hover:text-gray-900">View</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    @if (ViewBag.TotalPages > 1)
    {
        <div class="bg-white px-4 py-3 rounded shadow-sm">
            <div class="flex justify-between items-center">
                <div class="text-sm text-gray-700">
                    Showing @(((ViewBag.CurrentPage - 1) * ViewBag.PageSize) + 1) to @Math.Min(ViewBag.CurrentPage * ViewBag.PageSize, ViewBag.TotalUsers) of @ViewBag.TotalUsers results
                </div>
                <div class="flex space-x-2">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <a href="?page=@(ViewBag.CurrentPage - 1)&search=@ViewBag.Search" class="px-3 py-1 border rounded hover:bg-gray-50">Previous</a>
                    }
                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <a href="?page=@(ViewBag.CurrentPage + 1)&search=@ViewBag.Search" class="px-3 py-1 border rounded hover:bg-gray-50">Next</a>
                    }
                </div>
            </div>
        </div>
    }

    <!-- Empty State -->
    @if (!Model.Any())
    {
        <div class="bg-white p-8 rounded shadow-sm text-center">
            <h3 class="text-lg font-medium text-gray-900 mb-2">No users found</h3>
            <p class="text-gray-600 mb-4">Get started by creating your first user.</p>
            <a href="/admin/auth/users/create" class="micfx-button-primary">
                Create First User
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-submit search form on Enter
            const searchInput = document.getElementById('search');
            if (searchInput) {
                searchInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        this.form.submit();
                    }
                });
            }
        });

        // Toggle user active status
        function toggleUserStatus(userId, activate) {
            const action = activate ? 'activate' : 'deactivate';
            const message = activate ? 
                'Are you sure you want to activate this user?' : 
                'Are you sure you want to deactivate this user?';

            if (confirm(message)) {
                fetch(`@Url.Action("ToggleStatus")`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    },
                    body: JSON.stringify({
                        userId: userId,
                        isActive: activate
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Failed to ' + action + ' user: ' + (data.message || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while trying to ' + action + ' the user.');
                });
            }
        }

        // Delete user
        function deleteUser(userId, userName) {
            if (confirm(`Are you sure you want to delete user "${userName}"? This action cannot be undone.`)) {
                fetch(`@Url.Action("Delete")`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    },
                    body: JSON.stringify({
                        userId: userId
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Failed to delete user: ' + (data.message || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while trying to delete the user.');
                });
            }
        }
    </script>
} 