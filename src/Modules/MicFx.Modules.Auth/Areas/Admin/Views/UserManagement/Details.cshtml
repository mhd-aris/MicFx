@model MicFx.Modules.Auth.Domain.DTOs.UserDetailsViewModel

@{
    ViewData["Title"] = "User Details";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="space-y-6">
    <!-- Header -->
    <div class="flex justify-between items-center">
        <div>
            <h2 class="text-2xl font-bold text-gray-900">User Details</h2>
            <p class="text-gray-600 mt-1">View user information and permissions</p>
        </div>
        <div class="flex space-x-3">
            <a href="/admin/auth/users/edit/@Model.Id" class="micfx-button-primary">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                </svg>
                Edit User
            </a>
            <a href="/admin/auth/users" class="micfx-button-secondary">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Back to Users
            </a>
        </div>
    </div>

    <!-- User Information -->
    <div class="grid md:grid-cols-2 gap-6">
        <!-- Basic Information -->
        <div class="micfx-card">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Basic Information</h3>
            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-500">Full Name</label>
                    <p class="mt-1 text-sm text-gray-900">@($"{Model.FirstName} {Model.LastName}")</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Email Address</label>
                    <p class="mt-1 text-sm text-gray-900">@Model.Email</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Status</label>
                    <span class="inline-flex px-2 py-1 text-xs rounded @(Model.IsActive ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                        @(Model.IsActive ? "Active" : "Inactive")
                    </span>
                </div>
            </div>
        </div>

        <!-- Account Information -->
        <div class="micfx-card">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Account Information</h3>
            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-500">Created At</label>
                    <p class="mt-1 text-sm text-gray-900">@Model.CreatedAt.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                </div>
                @if (Model.UpdatedAt.HasValue)
                {
                    <div>
                        <label class="block text-sm font-medium text-gray-500">Last Updated</label>
                        <p class="mt-1 text-sm text-gray-900">@Model.UpdatedAt.Value.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                    </div>
                }
                @if (Model.LastLoginAt.HasValue)
                {
                    <div>
                        <label class="block text-sm font-medium text-gray-500">Last Login</label>
                        <p class="mt-1 text-sm text-gray-900">@Model.LastLoginAt.Value.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Roles -->
    <div class="micfx-card">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Assigned Roles</h3>
        @if (Model.Roles.Any())
        {
            <div class="flex flex-wrap gap-2">
                @foreach (var role in Model.Roles)
                {
                    <span class="inline-flex px-3 py-1 text-sm bg-blue-100 text-blue-800 rounded-full">
                        @role
                    </span>
                }
            </div>
        }
        else
        {
            <p class="text-gray-500 text-sm">No roles assigned to this user.</p>
        }
    </div>

    <!-- Claims -->
    @if (Model.Claims.Any())
    {
        <div class="micfx-card">
            <h3 class="text-lg font-medium text-gray-900 mb-4">User Claims</h3>
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Value</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var claim in Model.Claims)
                        {
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@claim.GetType().GetProperty("Type")?.GetValue(claim)</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@claim.GetType().GetProperty("Value")?.GetValue(claim)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div> 